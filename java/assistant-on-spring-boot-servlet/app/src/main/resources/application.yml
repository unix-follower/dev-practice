spring:
  application:
    name: assistant-on-spring-boot-servlet
  cloud:
    config:
      import-check:
        enabled: false
  config:
    import: optional:configserver:http://localhost:8000
  data:
    jpa:
      repositories:
        enabled: false
  lifecycle:
    timeout-per-shutdown-phase: 30s
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:}

server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful

management:
  endpoint:
    health:
      probes:
        enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - "*"
  tracing:
    enabled: ${MANAGEMENT_TRACING_ENABLED:false}
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${MANAGEMENT_TRACING_ZIPKIN_ENDPOINT:}

logging:
  level:
    org.hibernate: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

logbook:
  exclude:
    - /actuator/**

otel:
  instrumentation:
    common:
      db-statement-sanitizer:
        enabled: true
    jdbc:
      enabled: true
      statement-sanitizer:
        enabled: true
    logback-appender:
      enabled: true
    logback-mdc:
      enabled: true
    spring-web:
      enabled: true
    spring-webmvc:
      enabled: true
  sdk:
    disabled: false
  logs:
    exporter: none
  metrics:
    exemplar:
      filter: TRACE_BASED
    exporter: otlp
  traces:
    sampler: parentbased_always_on
    exporter: otlp
  exporter:
    otlp:
      endpoint: http://192.168.105.8:4318
      compression: gzip
      timeout: 10000
      metrics:
        default:
          histogram:
            aggregation: EXPLICIT_BUCKET_HISTOGRAM
        temporality:
          preference: CUMULATIVE
  blrp:
    export:
      timeout: 30000
    max:
      export:
        batch:
          size: 512
      queue:
        size: 2048
    schedule:
      delay: 1000
  metric:
    export:
      interval: 60000
  span:
    link:
      count:
        limit: 128
    event:
      count:
        limit: 128
    attribute:
      count:
        limit: 128
      value:
        length:
          limit: 0
  bsp:
    export:
      timeout: 30000
    max:
      export:
        batch:
          size: 512
      queue:
        size: 2048
    schedule:
      delay: 5000
  java:
    exporter:
      memory_mode: reusable_data
      otlp:
        retry:
          disabled: false
    metrics:
      cardinality:
        limit: 2000
  attribute:
    count:
      limit: 128
    value:
      length:
        limit: 0
  propagators:
    - tracecontext
    - baggage
    - jaeger

app:
  cors:
    access-control-allow-origin-patterns: ${APP_CORS_ACCESS_CONTROL_ALLOW_ORIGIN_PATTERN:http://localhost:3000,http://localhost:4200}
    access-control-max-age: ${APP_CORS_ACCESS_CONTROL_MAX_AGE:PT1h}
    access-control-allow-headers: ${APP_CORS_ACCESS_CONTROL_ALLOW_HEADERS:*}
    access-control-allow-methods: ${APP_CORS_ACCESS_CONTROL_ALLOW_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS}
  pubchem:
    ds:
      driver-class-name: org.postgresql.Driver
      url: ${APP_PUBCHEM_DS_URL:jdbc:postgresql://192.168.105.8:32000/assistant_datahub?currentSchema=pubchem}
      username: ${APP_PUBCHEM_DS_USERNAME:}
      password: ${APP_PUBCHEM_DS_PASSWORD:}
    hikari:
      maximum-pool-size: ${APP_PUBCHEM_HIKARI_MAXIMUM_POOL_SIZE:100}
      minimum-idle: ${APP_PUBCHEM_HIKARI_MINIMUM_IDLE:1}
      pool-name: ${spring.application.name}-pubchem-pool
      connection-timeout: ${APP_PUBCHEM_HIKARI_CONNECTION_TIMEOUT:30s}
      validation-timeout: ${APP_PUBCHEM_HIKARI_VALIDATION_TIMEOUT:5s}
      idle-timeout: ${APP_PUBCHEM_HIKARI_IDLE_TIMEOUT:10m}
      max-lifetime: ${APP_PUBCHEM_HIKARI_MAX_LIFETIME:30m}
      keep-alive-time: ${APP_PUBCHEM_HIKARI_KEEP_ALIVE_TIME:2m}
    pg-age-graph:
      driver-class-name: org.postgresql.Driver
      url: ${APP_PG_AGE_GRAPH_URL:jdbc:postgresql://192.168.105.8:5432/pubchem_graph?currentSchema=ag_catalog}
      username: ${APP_PG_AGE_GRAPH_USERNAME:}
      password: ${APP_PG_AGE_GRAPH_PASSWORD:}
    hikari-pg-age-graph:
      maximum-pool-size: ${APP_PG_AGE_GRAPH_HIKARI_MAXIMUM_POOL_SIZE:100}
      minimum-idle: ${APP_PG_AGE_GRAPH_HIKARI_MINIMUM_IDLE:1}
      pool-name: ${spring.application.name}-pubchem-graph-pool
      connection-timeout: ${APP_PG_AGE_GRAPH_HIKARI_CONNECTION_TIMEOUT:30s}
      validation-timeout: ${APP_PG_AGE_GRAPH_HIKARI_VALIDATION_TIMEOUT:5s}
      idle-timeout: ${APP_PG_AGE_GRAPH_HIKARI_IDLE_TIMEOUT:10m}
      max-lifetime: ${APP_PG_AGE_GRAPH_HIKARI_MAX_LIFETIME:30m}
      keep-alive-time: ${APP_PG_AGE_GRAPH_HIKARI_KEEP_ALIVE_TIME:2m}
  stock-market:
    ds:
      driver-class-name: org.postgresql.Driver
      url: ${APP_STOCK_MARKET_DS_URL:jdbc:postgresql://192.168.105.8:32000/assistant_datahub?currentSchema=stock_market}
      username: ${APP_STOCK_MARKET_DS_USERNAME:}
      password: ${APP_STOCK_MARKET_DS_PASSWORD:}
    hikari:
      maximum-pool-size: ${APP_STOCK_MARKET_HIKARI_MAXIMUM_POOL_SIZE:100}
      minimum-idle: ${APP_STOCK_MARKET_HIKARI_MINIMUM_IDLE:2}
      pool-name: ${spring.application.name}-stock-market-pool
      connection-timeout: ${APP_STOCK_MARKET_HIKARI_CONNECTION_TIMEOUT:3m}
      validation-timeout: ${APP_STOCK_MARKET_HIKARI_VALIDATION_TIMEOUT:5s}
      idle-timeout: ${APP_STOCK_MARKET_HIKARI_IDLE_TIMEOUT:10m}
      max-lifetime: ${APP_STOCK_MARKET_HIKARI_MAX_LIFETIME:30m}
      keep-alive-time: ${APP_STOCK_MARKET_HIKARI_KEEP_ALIVE_TIME:2m}
